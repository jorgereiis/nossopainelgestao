# Generated by Django 4.2.25 on 2025-10-30 20:42

from django.db import migrations


def remove_duplicates(apps, schema_editor):
    """
    Remove registros duplicados de MensagemEnviadaWpp.

    Mantém apenas o registro mais recente (maior ID) para cada combinação
    única de (usuario, telefone, data_envio).

    Isso é necessário antes de aplicar a UniqueConstraint.
    """
    MensagemEnviadaWpp = apps.get_model('cadastros', 'MensagemEnviadaWpp')

    # Busca todos os registros
    all_messages = MensagemEnviadaWpp.objects.all().order_by('usuario', 'telefone', 'data_envio', 'id')

    seen = set()
    to_delete = []

    for msg in all_messages:
        key = (msg.usuario_id, msg.telefone, msg.data_envio)
        if key in seen:
            # Duplicata: marca para deletar
            to_delete.append(msg.id)
        else:
            seen.add(key)

    # Deleta duplicatas
    if to_delete:
        MensagemEnviadaWpp.objects.filter(id__in=to_delete).delete()
        print(f"Removidas {len(to_delete)} mensagens duplicadas")


def reverse_duplicates(apps, schema_editor):
    """
    Operação reversa não faz nada (não podemos recriar duplicatas).
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('cadastros', '0037_ofertapromocionalenviada'),
    ]

    operations = [
        migrations.RunPython(remove_duplicates, reverse_duplicates),
    ]
