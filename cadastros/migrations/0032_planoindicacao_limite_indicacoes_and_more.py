# Generated by Django 4.2.25 on 2025-10-23 04:00

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cadastros', '0031_uuid_media_filenames'),
    ]

    operations = [
        migrations.AddField(
            model_name='planoindicacao',
            name='limite_indicacoes',
            field=models.IntegerField(default=0, help_text='Apenas para Desconto Progressivo. Define quantas indicações contam para desconto (0 = ilimitado).', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Limite máximo de indicações com desconto'),
        ),
        migrations.AlterField(
            model_name='planoindicacao',
            name='nome',
            field=models.CharField(choices=[('desconto', 'Desconto por Indicação'), ('dinheiro', 'Bônus por Indicações'), ('anuidade', 'Bônus por Anuidade'), ('desconto_progressivo', 'Desconto Progressivo Por Indicação')], max_length=255),
        ),
        migrations.AlterField(
            model_name='planoindicacao',
            name='tipo_plano',
            field=models.CharField(choices=[('desconto', 'Desconto por Indicação'), ('dinheiro', 'Bônus por Indicações'), ('anuidade', 'Bônus por Anuidade'), ('desconto_progressivo', 'Desconto Progressivo Por Indicação')], max_length=255),
        ),
        migrations.CreateModel(
            name='DescontoProgressivoIndicacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_desconto', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valor do Desconto')),
                ('data_inicio', models.DateField(default=datetime.date.today, verbose_name='Data de Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de Fim')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('cliente_indicado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desconto_progressivo_gerado', to='cadastros.cliente', verbose_name='Cliente Indicado')),
                ('cliente_indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descontos_progressivos_recebidos', to='cadastros.cliente', verbose_name='Cliente Indicador')),
                ('plano_indicacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastros.planoindicacao', verbose_name='Plano de Indicação')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Desconto Progressivo por Indicação',
                'verbose_name_plural': 'Descontos Progressivos por Indicação',
                'ordering': ['-data_inicio', '-criado_em'],
                'indexes': [models.Index(fields=['cliente_indicador', 'ativo'], name='cadastros_d_cliente_idx'), models.Index(fields=['cliente_indicado', 'ativo'], name='cadastros_d_indicado_idx'), models.Index(fields=['usuario', 'ativo'], name='cadastros_d_usuario_idx')],
            },
        ),
    ]
